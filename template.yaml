AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Personal website with server-side rendering using Vite and React

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        NODE_ENV: production

Resources:
  PersonalWebsiteFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: dist/server/index.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Events:
        PersonalWebsite:
          Type: HttpApi
          Properties:
            Path: /{proxy+}
            Method: any
      Environment:
        Variables:
          NODE_ENV: production

  StaticAssets:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: index.html

  StaticAssetsBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref StaticAssets
      PolicyDocument:
        Statement:
          - Action: s3:GetObject
            Effect: Allow
            Resource: !Sub "${StaticAssets.Arn}/*"
            Principal: "*"

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - Id: ApiGateway
            DomainName: !Sub "${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com"
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: https-only
          - Id: S3Static
            DomainName: !GetAtt StaticAssets.DomainName
            CustomOriginConfig:
              HTTPPort: 80
              HTTPSPort: 443
              OriginProtocolPolicy: http-only
        Enabled: true
        DefaultCacheBehavior:
          TargetOriginId: ApiGateway
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods: [DELETE, GET, HEAD, OPTIONS, PATCH, POST, PUT]
          CachedMethods: [GET, HEAD]
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: all
            Headers:
              - Accept
              - Authorization
              - Host
        CacheBehaviors:
          - PathPattern: "/assets/*"
            TargetOriginId: S3Static
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods: [GET, HEAD, OPTIONS]
            CachedMethods: [GET, HEAD]
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
        DefaultRootObject: ""
        PriceClass: PriceClass_100
        HttpVersion: http2
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

Outputs:
  PersonalWebsiteApi:
    Description: "API Gateway endpoint URL for Prod stage for Personal Website function"
    Value: !Sub "https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/"
  PersonalWebsiteFunction:
    Description: "Personal Website Lambda Function ARN"
    Value: !GetAtt PersonalWebsiteFunction.Arn
  CloudFrontDistributionDomainName:
    Description: "CloudFront Distribution Domain Name"
    Value: !GetAtt CloudFrontDistribution.DomainName
  StaticAssetsS3BucketName:
    Description: "S3 Bucket for Static Assets"
    Value: !Ref StaticAssets